{
    "contents" : "# server.R\nrequire(\"jsonlite\")\nrequire(\"RCurl\")\nrequire(ggplot2)\nrequire(dplyr)\nrequire(shiny)\nrequire(shinydashboard)\nrequire(leaflet)\nrequire(gridExtra)\n\nshinyServer(function(input, output) {\n  \n  KPI_Low_Max_value <- reactive({input$KPI1}) \n  \n  df1 <- eventReactive(input$clicks, {data.frame(fromJSON(getURL(URLencode('skipper.cs.utexas.edu:5001/rest/native/?query=\"select * from STORMEVENTS\"'),httpheader=c(DB='jdbc:oracle:thin:@sayonara.microlab.cs.utexas.edu:1521:orcl', USER='C##cs329e_apb766', PASS='orcl_apb766', MODE='native_mode', MODEL='model', returnDimensions = 'False', returnFor = 'JSON'), verbose = TRUE)))  %>% select(., EVENT_TYPE, STATE, DAMAGE_CROPS, DAMAGE_PROPERTY, BEGIN_TIME, END_TIME) %>% mutate(DAMAGE_CROPS = strtoi(DAMAGE_CROPS), DAMAGE_PROPERTY = strtoi(DAMAGE_PROPERTY)) %>% filter(., DAMAGE_CROPS > 1 | DAMAGE_PROPERTY > 1) %>% filter(., DAMAGE_CROPS != \"null\" & DAMAGE_PROPERTY != \"null\") %>% mutate(., DAMAGE_KPI = (as.numeric(DAMAGE_CROPS) + as.numeric(DAMAGE_PROPERTY)) / (as.numeric(END_TIME) - as.numeric(BEGIN_TIME))) %>% filter(DAMAGE_KPI != Inf) %>% arrange(STATE) %>% distinct() %>% group_by(., EVENT_TYPE, STATE) %>% mutate(KPI = cumsum(DAMAGE_KPI)) %>% mutate(MAX = max(KPI)) %>% select(EVENT_TYPE, STATE, MAX) %>% distinct() %>% filter(MAX > KPI_Low_Max_value()) })\n  \n  output$distPlot1 <- renderPlot({             \n    plot <- ggplot() + \n      coord_cartesian() + \n      scale_x_discrete() +\n      scale_y_discrete() +\n      scale_fill_gradient2(low=\"white\", mid = \"red\", high= \"darkred\", midpoint = 7500) +\n      labs(title=input$title) +\n      labs(x=paste(\"Disaster\"), y=paste(\"State\")) +\n      layer(data=df1(), \n            mapping=aes(x=EVENT_TYPE, y=STATE, fill = MAX), \n            stat=\"identity\", \n            stat_params=list(), \n            geom=\"tile\",\n            geom_params=list(), \n            position=position_identity()\n      )\n    \n    plot\n  })\n  observeEvent(input$clicks, {\n    print(as.numeric(input$clicks))\n  })\n  \n  # Begin code for Second Tab:\n  dfs <- eventReactive(input$clicks2, {data.frame(fromJSON(getURL(URLencode('skipper.cs.utexas.edu:5001/rest/native/?query=\"select * from STORMEVENTS\"'),httpheader=c(DB='jdbc:oracle:thin:@sayonara.microlab.cs.utexas.edu:1521:orcl', USER='C##cs329e_mew2795', PASS='orcl_mew2795', MODE='native_mode', MODEL='model', returnDimensions = 'False', returnFor = 'JSON'), verbose = TRUE), )) %>% select(BEGIN_YEARMONTH, DEATHS_DIRECT, DEATHS_INDIRECT, DAMAGE_PROPERTY, BEGIN_DAY) %>% filter(DEATHS_DIRECT != 0)})\n  #dfs1 <- select(dfs, BEGIN_YEARMONTH, DEATHS_DIRECT, DEATHS_INDIRECT, DAMAGE_PROPERTY, BEGIN_DAY) %>% filter(DEATHS_DIRECT != 0)\n  #df2 <- eventReactive(input$clicks2, {dfs1})\n  \n  output$distPlot2 <- renderPlot(height=1000, width=2000, {\n    plot1 <- ggplot() + \n      coord_cartesian() + \n      scale_x_continuous() +\n      scale_y_continuous() +\n      facet_wrap(~BEGIN_DAY, ncol = 1) +\n      labs(title='StormEvents Barchart\\ndeaths_direct, avg(deaths_direct), ') +\n      labs(x=paste(\"Begin Day\"), y=paste(\"Deaths Direct\")) +\n      layer(data=dfs(), \n            mapping=aes(x=BEGIN_DAY, y=(DEATHS_DIRECT)), \n            stat=\"identity\", \n            stat_params=list(), \n            geom=\"bar\",\n            geom_params=list(colour=\"blue\"), \n            position=position_identity()\n      ) + coord_flip() +\n      layer(data=dfs(), \n            mapping=aes(x=BEGIN_DAY, y=DEATHS_DIRECT, label=(DEATHS_DIRECT)), \n            stat=\"identity\", \n            stat_params=list(), \n            geom=\"text\",\n            geom_params=list(colour=\"black\", hjust=0.5), \n            position=position_identity()\n      ) +\n      layer(data=dfs(), \n            mapping=aes(yintercept = mean(DEATHS_DIRECT)), \n            geom=\"hline\",\n            geom_params=list(colour=\"red\")\n      )\n    plot1\n  })\n  \n  # Begin code for Third Tab:\n  \n  df4 <- eventReactive(input$clicks4, {data.frame(fromJSON(getURL(URLencode('skipper.cs.utexas.edu:5001/rest/native/?query=\"select EVENT_TYPE, DAMAGE_CROPS, DAMAGE_PROPERTY, END_TIME, BEGIN_TIME from STORMEVENTS where DAMAGE_CROPS is not null and DAMAGE_PROPERTY is not null\"'),httpheader=c(DB='jdbc:oracle:thin:@sayonara.microlab.cs.utexas.edu:1521:orcl', USER='C##cs329e_jdg3666', PASS='orcl_jdg3666', MODE='native_mode', MODEL='model', returnDimensions = 'False', returnFor = 'JSON'), verbose = TRUE)))  %>% select(EVENT_TYPE, DAMAGE_CROPS, DAMAGE_PROPERTY, END_TIME, BEGIN_TIME) %>% filter(DAMAGE_PROPERTY > 0, DAMAGE_CROPS > 0) %>% mutate (TOTAL_TIME = (abs(END_TIME - BEGIN_TIME)) / 100) %>% filter(TOTAL_TIME > 0) })\n  \n  output$distPlot4 <- renderPlot({ \n    crop <- ggplot() + \n      coord_cartesian() + \n      scale_x_discrete() +\n      scale_y_continuous() +\n      labs(title='Crop and Property Damage across Disasters less than 24 hours') +\n      labs(x=\"Total Time of Disaster\", y=paste(\"Crop Damage\")) +\n      layer(data=df4(), \n            mapping=aes(as.numeric(TOTAL_TIME), y=as.numeric(as.character(DAMAGE_CROPS)), color=EVENT_TYPE), \n            stat=\"identity\", \n            stat_params=list(), \n            geom=\"point\",\n            geom_params=list(), \n            #position=position_identity()\n            position=position_jitter(width=0.3, height=0)\n      )\n    \n    property <- ggplot() + \n      coord_cartesian() + \n      scale_x_discrete() +\n      scale_y_continuous() +\n      labs(title='Crop and Property Damage across Disasters less than 24 hours') +\n      labs(x=\"Total Time of Disaster\", y=paste(\"Crop Damage\")) +\n      layer(data=df4(), \n            mapping=aes(as.numeric(TOTAL_TIME), y=as.numeric(as.character(DAMAGE_PROPERTY)), color=EVENT_TYPE), \n            stat=\"identity\", \n            stat_params=list(), \n            geom=\"point\",\n            geom_params=list(), \n            #position=position_identity()\n            position=position_jitter(width=0.3, height=0)\n      )\n    plot4 <- grid.arrange(crop, property)\n    plot4\n  })\n})\n",
    "created" : 1448319322010.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "1624964383",
    "id" : "6842024E",
    "lastKnownWriteTime" : 1448319988,
    "path" : "~/DataVisualization/DV_SProject/02 Shiny/server.R",
    "project_path" : "02 Shiny/server.R",
    "properties" : {
        "tempName" : "Untitled1"
    },
    "relative_order" : 1,
    "source_on_save" : false,
    "type" : "r_source"
}